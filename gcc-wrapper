#!/bin/sh

# $Id: gcc-wrapper,v 1.8 2004-02-02 17:58:58-08 kst Exp $
# $Source: /home/kst/CVS_smov/tools/gcc-wrapper/gcc-wrapper,v $

########################################################################
# @Copyright@
#
# Copyright (c) 2004 The Regents of the University of California. All
# rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. All advertising materials mentioning features or use of this
# software must display the following acknowledgement: This product
# includes software developed by the Grid and Cluster Computing Group
# at the San Diego Supercomputer Center and its contributors.
#
# 4. Neither the name of the Center nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @Copyright@
########################################################################

########################################################################
# Developed by Keith Thompson <kst@sdsc.edu>
########################################################################

#
# gcc-wrapper release 0.1
#
# Invoke gcc with specified arguments, sending stdout to stdout and
# stderr to stderr and returning gcc's exit status.
#
# Filter out any occurrences of $msg1 or $msg2 (see below) on stderr.
#
# This is a workaround for Globus Bugzilla # 488,
# <http://bugzilla.globus.org/bugzilla/show_bug.cgi?id=488>
# See also <http://www.sdsc.edu/~kst/gcc-3.2-bug/>
#
# Note that all of gcc's stdout is written first, followed by stderr (with
# the specified messages filtered out).  This should be ok; anything that
# inovkes gcc shouldn't depend on stdout and stderr being interspersed.
#
# If gcc is killed by a signal, I *think* gcc-wrapper will return a
# status of (128 + signal_number), which should be recognized by any
# caller as a failure.
#

msg1='changing search order for system directory'
msg2='as it has already been specified as a non-system directory'
out=/tmp/gcc-$$.out
err=/tmp/gcc-$$.err
gcc.real "$@" >$out 2>$err
gcc_status=$?
cat $out
egrep -v "$msg1|$msg2" $err 1>&2
rm -f $out $err
exit $gcc_status
